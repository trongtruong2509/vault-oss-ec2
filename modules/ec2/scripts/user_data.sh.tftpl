#!/bin/bash
set -xe
export DEBIAN_FRONTEND=noninteractive

# Export vault configuration variables
export VAULT_VERSION="${vault_version}"
export STORAGE_BACKEND="${storage_backend}"
export AUTO_UNSEAL="${auto_unseal}"
export KMS_KEY_ID="${kms_key_id}"
export ENABLE_UI="${enable_ui}"
export ENABLE_PUBLIC_IP="${enable_public_ip}"
export VAULT_PORT=8200

# Create the apt config directory if it doesn't exist
sudo mkdir -p /etc/apt/apt.conf.d

# Write the IPv4 enforcement setting
echo 'Acquire::ForceIPv4 "true";' | sudo tee /etc/apt/apt.conf.d/99force-ipv4 > /dev/null

# Update system packages
sudo apt update && sudo apt upgrade -y

# Install dependencies
sudo apt install -y curl software-properties-common jq unzip awscli

# Add HashiCorp GPG key - updated method from official docs
wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg

# Add HashiCorp repository - updated method from official docs
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list

# Update package list
sudo apt update

# Install Vault
sudo apt install -y vault=$VAULT_VERSION

# Create Vault configuration directory
sudo mkdir -p /etc/vault.d
sudo mkdir -p /opt/vault/data

# Set proper ownership
sudo chown -R vault:vault /opt/vault

# Create Vault configuration
if [ "$STORAGE_BACKEND" = "file" ]; then
  cat > /etc/vault.d/vault.hcl << EOF
storage "file" {
  path = "/opt/vault/data"
}

listener "tcp" {
  address     = "0.0.0.0:8200"
  tls_disable = 1
}

api_addr = "http://127.0.0.1:8200"
cluster_addr = "http://127.0.0.1:8201"
ui = $ENABLE_UI
EOF

elif [ "$STORAGE_BACKEND" = "raft" ]; then
  cat > /etc/vault.d/vault.hcl << EOF
storage "raft" {
  path = "/opt/vault/data"
  node_id = "vault-$(hostname)"
}

listener "tcp" {
  address     = "0.0.0.0:8200"
  tls_disable = 1
}

api_addr = "http://127.0.0.1:8200"
cluster_addr = "http://127.0.0.1:8201"
ui = $ENABLE_UI
EOF
fi

# Configure AWS KMS auto-unseal if enabled
if [ "$AUTO_UNSEAL" = "true" ] && [ -n "$KMS_KEY_ID" ]; then
  # Get instance region
  REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)
  
  # Append seal configuration to vault.hcl
  cat >> /etc/vault.d/vault.hcl << EOF

seal "awskms" {
  region     = "$REGION"
  kms_key_id = "$KMS_KEY_ID"
}
EOF
fi

# Set proper ownership and permissions
sudo chown -R vault:vault /etc/vault.d
sudo chmod 640 /etc/vault.d/vault.hcl

# Configure systemd service
sudo bash -c "cat > /etc/systemd/system/vault.service << EOF
[Unit]
Description=Vault Secret Management Service
Requires=network-online.target
After=network-online.target

[Service]
User=vault
Group=vault
ProtectSystem=full
ProtectHome=read-only
PrivateTmp=yes
PrivateDevices=yes
SecureBits=keep-caps
AmbientCapabilities=CAP_IPC_LOCK
Capabilities=CAP_IPC_LOCK+ep
CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
NoNewPrivileges=yes
ExecStart=/usr/bin/vault server -config=/etc/vault.d/
ExecReload=/bin/kill --signal HUP \$MAINPID
KillMode=process
KillSignal=SIGINT
Restart=on-failure
RestartSec=5
TimeoutStopSec=30
StartLimitInterval=60
StartLimitBurst=3
LimitNOFILE=65536

[Install]
WantedBy=multi-user.target
EOF"

# Start and enable Vault service
sudo systemctl daemon-reload
sudo systemctl enable vault
sudo systemctl start vault

# Set environment variables for using the Vault CLI
echo "export VAULT_ADDR=http://127.0.0.1:8200" | sudo tee -a /etc/profile.d/vault.sh

# Set up server hostname and IP for access
if [ "$ENABLE_PUBLIC_IP" = "true" ]; then
  # Get the public IP address
  PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
  echo "export VAULT_API_ADDR=http://$PUBLIC_IP:8200" | sudo tee -a /etc/profile.d/vault.sh
  echo "Vault UI is accessible at: http://$PUBLIC_IP:8200/ui"
else
  # Get the private IP address
  PRIVATE_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)
  echo "export VAULT_API_ADDR=http://$PRIVATE_IP:8200" | sudo tee -a /etc/profile.d/vault.sh
  echo "Vault UI is accessible at: http://$PRIVATE_IP:8200/ui"
fi

# Make profile changes effective for current session
source /etc/profile.d/vault.sh

# Wait for Vault to start
sleep 10

# Check Vault status
vault status || echo "Vault needs to be initialized and unsealed"

echo "Vault installation completed successfully"
